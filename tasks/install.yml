---
- name: install openssl denpendency
  yum:
    name: openssl-devel
    state: present
    update_cache: no

- name: Download zlib library
  uri:
    url: "{{ zlib_download_path }}"
    dest: "{{ download_dir }}/{{ zlib_targz }}"
    creates: "{{ download_dir }}/{{ zlib_targz }}"

- name: Download pcre library
  uri:
    url: "{{ pcre_download_path }}"
    dest: "{{ download_dir }}/{{ pcre_targz }}"
    creates: "{{ download_dir }}/{{ pcre_targz }}"

- name: Download nginx source tarbar"
  uri:
    url: "{{ nginx_downlaod_path }}"
    dest: "{{ download_dir }}/{{ nginx_targz }}"
    creates: "{{ download_dir }}/{{ nginx_targz }}"

- name: Unarchive source .tar.gz
  shell: 'tar -zxvf {{ item.src }}'
  args:
    creates: "{{ item.dest }}"
    chdir: "{{ download_dir }}"
  with_items:
    - {src: "{{ download_dir }}/{{ zlib_targz }}", dest: "{{ download_dir }}/{{ zlib_dir }}"}
    - {src: "{{ download_dir }}/{{ pcre_targz }}", dest: "{{ download_dir }}/{{ pcre_dir }}"}
    - {src: "{{ download_dir }}/{{ nginx_targz }}", dest: "{{ download_dir }}/{{ nginx_dir }}"}

- name: configure nginx compile options
  shell: >
      ./configure "--prefix={{ nginx_prefix_path }}" "--conf-path={{ nginx_conf_path }}" --sbin-path="{{ nginx_sbin_path }}" "--pid-path={{ nginx_pid_path }}" "--error-log-path={{ nginx_error_log_path }}" "--http-log-path={{ nginx_http_log_path }}" "--user={{ nginx_user }}" "--group={{ nginx_group }}"
      --with-http_ssl_module
      --with-zlib="{{ download_dir }}/{{ zlib_dir }}"
      --with-pcre="{{ download_dir }}/{{ pcre_dir }}"
      --with-pcre-jit
  args:
    chdir: "{{ download_dir }}/{{ nginx_dir }}"

- name: compile and install nginx server
  shell: make && make install && make clean
  args:
    chdir: "{{ download_dir }}//{{ nginx_dir }}"

- name: create nginx running user
  user:
    name: "{{ nginx_user }}"
    createhome: no
    shell: /bin/nologin

#修改日志目录拥有者
- name: change owner of nginx log dir
  file:
    path: "{{ nginx_log_prefix_path }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0700
    state: directory

#创建conf.d配置文件目录
- name: make conf.d configure directory
  file:
    path: "{{ nginx_conf_prefix_path }}/conf.d"
    mode: 0755
    state: directory

#创建default.d配置文件目录
- name: make default.d configure directory
  file:
    path: "{{ nginx_conf_prefix_path }}/default.d"
    mode: 0755
    state: directory

#创建dynamic module配置文件目录
- name: make dynamic modules configure directory
  file:
    path: "{{ nginx_prefix_path }}/modules"
    mode: 0755
    state: directory
